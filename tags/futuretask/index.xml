<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>futuretask on JavaIsland</title>
    <link>https://www.javai.net/tags/futuretask/</link>
    <description>Recent content in futuretask on JavaIsland</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 29 Jun 2022 19:59:32 +0800</lastBuildDate><atom:link href="https://www.javai.net/tags/futuretask/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Java Multithreaded Concurrent FutureTask</title>
      <link>https://www.javai.net/post/202206/java-futuretask/</link>
      <pubDate>Wed, 29 Jun 2022 19:59:32 +0800</pubDate>
      
      <guid>https://www.javai.net/post/202206/java-futuretask/</guid>
      <description>Java&amp;rsquo;s multithreading mechanism essentially accomplishes two things, asynchronous computation and concurrency. Concurrency is solved by a series of APIs that address thread safety; asynchronous computation, on the other hand, is commonly used with Runnable and Callable in conjunction with threads.
FutureTask is a cancelable asynchronous callable API based on the Runnable implementation.
Basic usage Future represents the result of an asynchronous computation, and is executed via the ExecutorService&amp;rsquo;s Future&amp;lt;? &amp;gt; submit(Runnable task) method of the ExecutorService, which is used as the return value.</description>
    </item>
    
  </channel>
</rss>

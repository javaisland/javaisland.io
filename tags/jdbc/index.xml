<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>jdbc on JavaIsland</title>
    <link>https://www.javai.net/tags/jdbc/</link>
    <description>Recent content in jdbc on JavaIsland</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 11 Apr 2022 13:54:22 +0800</lastBuildDate><atom:link href="https://www.javai.net/tags/jdbc/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Analysis of connection pooling principles through HiKariCP</title>
      <link>https://www.javai.net/post/202204/java-hikaricp/</link>
      <pubDate>Mon, 11 Apr 2022 13:54:22 +0800</pubDate>
      
      <guid>https://www.javai.net/post/202204/java-hikaricp/</guid>
      <description>Design and Principle The base case HiKariCP as the default connection pool of SpringBoot2 framework, claimed to be the fastest running connection pool, database connection pool and the previous two mentioned thread pool and object pool, from the principle of design are based on the pooling idea, only in the implementation of their own characteristics; first or see the basic case of HiKariCP usage.
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34  import com.</description>
    </item>
    
  </channel>
</rss>

<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>task on JavaIsland</title>
    <link>https://www.javai.net/tags/task/</link>
    <description>Recent content in task on JavaIsland</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 17 Apr 2022 13:29:57 +0800</lastBuildDate><atom:link href="https://www.javai.net/tags/task/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>The use of ExecutorService in java concurrency</title>
      <link>https://www.javai.net/post/202204/java-executorservice-use/</link>
      <pubDate>Sun, 17 Apr 2022 13:29:57 +0800</pubDate>
      
      <guid>https://www.javai.net/post/202204/java-executorservice-use/</guid>
      <description>Preface ExecutorService is a framework for asynchronous execution in java. By using ExecutorService you can easily create a multi-threaded execution environment.
This article will explain in detail the specific use of ExecutorService.
Creating an ExecutorService Generally speaking, there are two ways to create an ExecutorService.
The first way is to use the factory class methods in Executors, for example.
1  ExecutorService executor = Executors.newFixedThreadPool(10);   In addition to the newFixedThreadPool method, Executors contains a number of methods to create an ExecutorService.</description>
    </item>
    
  </channel>
</rss>

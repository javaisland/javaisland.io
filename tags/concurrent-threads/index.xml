<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>concurrent threads on JavaIsland</title>
    <link>https://www.javai.net/tags/concurrent-threads/</link>
    <description>Recent content in concurrent threads on JavaIsland</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 15 Apr 2022 20:59:32 +0800</lastBuildDate><atom:link href="https://www.javai.net/tags/concurrent-threads/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Java Virtual Threads Explained</title>
      <link>https://www.javai.net/post/202204/java-virtual-threads-explained/</link>
      <pubDate>Fri, 15 Apr 2022 20:59:32 +0800</pubDate>
      
      <guid>https://www.javai.net/post/202204/java-virtual-threads-explained/</guid>
      <description>Many languages have technologies like virtual threads, such as Go, C#, Erlang, Lua, etc., which they call concurrent threads. Whether they are virtual threads or concurrent threads, they are all lightweight threads that aim to improve concurrency. This section details the Java platform&amp;rsquo;s &amp;ldquo;virtual threads&amp;rdquo; technology, &amp;ldquo;JEP 425: Virtual Threads (Preview)&amp;rdquo;.
The Java platform plans to introduce virtual threads that will significantly reduce the effort of writing, maintaining, and observing high-throughput concurrent applications.</description>
    </item>
    
  </channel>
</rss>

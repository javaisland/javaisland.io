<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>news on JavaIsland</title>
    <link>https://www.javai.net/categories/news/</link>
    <description>Recent content in news on JavaIsland</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 24 Jun 2022 19:55:48 +0800</lastBuildDate><atom:link href="https://www.javai.net/categories/news/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>OpenJDK proposal will provide Java class file API</title>
      <link>https://www.javai.net/post/202206/java-class-api/</link>
      <pubDate>Fri, 24 Jun 2022 19:55:48 +0800</pubDate>
      
      <guid>https://www.javai.net/post/202206/java-class-api/</guid>
      <description>The Java community is working on a Classfile API proposal that aims to provide an API for parsing, generating, and converting Java class files; initially as an internal replacement for the ASM in the JDK, and later as a public API. It is planned that ASM will eventually be removed from the JDK entirely.
The proposal notes that class file generation, parsing, and detection are ubiquitous in the Java ecosystem; many tools and libraries need to be able to handle class files, and frameworks often perform on-the-fly bytecode instrumentation, transformation, and generation.</description>
    </item>
    
    <item>
      <title>Java introduces static images to solve problems like slow running</title>
      <link>https://www.javai.net/post/202205/java-oracle-leyden/</link>
      <pubDate>Thu, 26 May 2022 13:40:53 +0800</pubDate>
      
      <guid>https://www.javai.net/post/202205/java-oracle-leyden/</guid>
      <description>In a recent social media post, Mark Reinhold, Chief Architect of Oracle&amp;rsquo;s Java Platform Group, officially announced the launch of the &amp;ldquo;Leyden&amp;rdquo; project. The project is said to have been approved and will alleviate slow startup and performance issues by introducing &amp;ldquo;static images&amp;rdquo; on the Java platform, designed to accelerate the creation of Java businesses.
It is understood that the &amp;ldquo;Leyden&amp;rdquo; project was first proposed around May 2020 and has been discussed for more than 2 years now.</description>
    </item>
    
    <item>
      <title>Java Discovers Annual Encryption Vulnerability</title>
      <link>https://www.javai.net/post/202204/java-encryption-vulnerability/</link>
      <pubDate>Tue, 26 Apr 2022 13:44:51 +0800</pubDate>
      
      <guid>https://www.javai.net/post/202204/java-encryption-vulnerability/</guid>
      <description>Recently, security researcher Khaled Nassar made public on GitHub the PoC code for a newly disclosed digital signature bypass vulnerability in Java, tracked as CVE-2022-21449.
The vulnerability is known to have been discovered by Neil Madden, a researcher at security consulting firm ForgeRock, in November of last year, and was notified to Oracle the same day.
Although Oracle gave the vulnerability a CVSS rating of 7.5, ForgeRock said they had privately disclosed the vulnerability when it was first discovered and rated the vulnerability a 10 on the CVSS.</description>
    </item>
    
    <item>
      <title>JDK 19 / Java 19 has proposed two features</title>
      <link>https://www.javai.net/post/202204/java-jdk19-proposed/</link>
      <pubDate>Mon, 25 Apr 2022 16:01:23 +0800</pubDate>
      
      <guid>https://www.javai.net/post/202204/java-jdk19-proposed/</guid>
      <description>JDK 18/Java 18 has been released last month, according to the plan JDK 19 will be released in September this year, a few days ago the official proposed two features that will be released in the next version. One is the Vector API, and the other is a port of the JDK to RISC-V. The former Vector API is an API that expresses vector computation and will be incubated for the fourth time in the next Java release; the latter proposes a feature to port the JDK to the open source Linux/RISC-V instruction set architecture (ISA).</description>
    </item>
    
    <item>
      <title>Thread-Affinity for CPU-bound threads</title>
      <link>https://www.javai.net/post/202204/java-thread-affinity/</link>
      <pubDate>Sun, 24 Apr 2022 14:49:37 +0800</pubDate>
      
      <guid>https://www.javai.net/post/202204/java-thread-affinity/</guid>
      <description>Introduction In modern computer systems, there can be multiple CPUs, and each CPU can have multiple cores. In order to take full advantage of the capabilities of modern CPUs, JAVA introduced multithreading, where different threads can run on different CPUs or different CPU cores at the same time. However, for JAVA programmers it is possible to control how many threads are created, but which CPU the threads are running on is generally difficult to know.</description>
    </item>
    
    <item>
      <title>Oracle fixes Java annual encryption vulnerability affecting Java 15 and above</title>
      <link>https://www.javai.net/post/202204/java-oracle-crypto-bug/</link>
      <pubDate>Fri, 22 Apr 2022 10:43:15 +0800</pubDate>
      
      <guid>https://www.javai.net/post/202204/java-oracle-crypto-bug/</guid>
      <description>Oracle pushed out a security update yesterday to fix a vulnerability that allowed attackers to forge certain types of SSL certificates and handshakes, two-factor authentication information, and authorization credentials generated by a range of widely used open standards. This allows an attacker to easily digitally sign files and other data.
This vulnerability affects the implementation of ECDSA (Elliptic Curve Digital Signature Algorithm) in Java 15 and above. ECDSA is an algorithm that uses elliptic curve cryptography principles to digitally authenticate messages.</description>
    </item>
    
    <item>
      <title>The Father of Java: Don&#39;t Stick with Java 8</title>
      <link>https://www.javai.net/post/202204/java-not-stick-java8/</link>
      <pubDate>Fri, 22 Apr 2022 10:26:59 +0800</pubDate>
      
      <guid>https://www.javai.net/post/202204/java-not-stick-java8/</guid>
      <description>James Gosling, the father of Java, recently twitter that developers should abandon JDK 8 as soon as possible and opt for JDK 17 LTS, which brings huge improvements in every aspect.
But maybe the father of Java was just promoting Corretto, the OpenJDK distribution for his boss AWS. and he suggests that developers still using JDK 8 might consider using Corretto&amp;rsquo;s new version- -Includes all the latest updates and CVE defenses.</description>
    </item>
    
    <item>
      <title>Technology Trends Java Teams Should Watch in 2022</title>
      <link>https://www.javai.net/post/202204/java-2022-trends/</link>
      <pubDate>Mon, 11 Apr 2022 15:33:15 +0800</pubDate>
      
      <guid>https://www.javai.net/post/202204/java-2022-trends/</guid>
      <description>Java is evolving quickly, and with potential changes to the OpenJDK release cycle, it may accelerate even further. For people like Michael Rasmussen, JRebel development lead at Perforce, keeping up with these changes and understanding their impact on development; creating features that resonate with the Java development community, keeping applications up to date with the latest versions of popular Java technologies, and developing new features, improvements, and integrations for JRebel is critical.</description>
    </item>
    
    <item>
      <title>Java introduces preview virtual threads</title>
      <link>https://www.javai.net/post/202204/java-virtual-threads/</link>
      <pubDate>Fri, 08 Apr 2022 13:14:35 +0800</pubDate>
      
      <guid>https://www.javai.net/post/202204/java-virtual-threads/</guid>
      <description>OpenJDK&amp;rsquo;s JEP 425: Virtual Threads (Preview) feature proposal shows that the Java platform will introduce the virtual threads feature. Virtual threads are lightweight threads that can significantly reduce the effort of writing, maintaining, and observing high-throughput concurrent applications.
Java developers have always relied on threads as the building blocks of concurrent server applications, where statements in each method are executed within a thread, and each thread provides a stack to store local variables and coordinate method calls, as well as context trapping when errors are reported.</description>
    </item>
    
    <item>
      <title>Java8 new features of the time and date API</title>
      <link>https://www.javai.net/post/202204/java8-time-api/</link>
      <pubDate>Tue, 05 Apr 2022 17:40:16 +0800</pubDate>
      
      <guid>https://www.javai.net/post/202204/java8-time-api/</guid>
      <description>Java8 includes a new time and date API, which is placed under the java.time package. This new time-date API is immutable and thread-safe (This class is immutable and thread-safe).
Local time: LocalDate, LocalTime, LocalDateTime Instances of the classes localDate, LocalTime, and LocalDateTime are immutable objects that represent the date, time, date, and time, respectively, using the ISO-8601 calendar system. They provide a simple date or time and do not contain current time information.</description>
    </item>
    
    <item>
      <title>Changes to the String object in Java 9</title>
      <link>https://www.javai.net/post/202204/java9-string/</link>
      <pubDate>Mon, 04 Apr 2022 17:27:47 +0800</pubDate>
      
      <guid>https://www.javai.net/post/202204/java9-string/</guid>
      <description>Overview In Java 9, the underlying String object has been changed from char[] to byte[], which has the immediate benefit of being more memory-efficient, hence the name Compact Strings Improvement. Because in Java char takes up 2 bytes and byte takes up 1 byte, while a Unicode character does not necessarily need 2 bytes to be represented, at least ASCII characters only need 1 byte to be done. That is, if your string is full of ASCII characters, half the space would be wasted if you use char.</description>
    </item>
    
    <item>
      <title>Linux 5.18 has two key improvements to exFAT file system support</title>
      <link>https://www.javai.net/post/202204/linux-exfat/</link>
      <pubDate>Sun, 03 Apr 2022 20:16:08 +0800</pubDate>
      
      <guid>https://www.javai.net/post/202204/linux-exfat/</guid>
      <description>According to the foreign media Phoronix presentation: This week&amp;rsquo;s Linux 5.18 merge window has two driver PRs for the Microsoft exFAT file system, both of which are very important driver patches, albeit small in number.
exFAT on Linux 5.18+ adds an option to allow access to paths with trailing points. Until now, the exFAT driver unconditionally removed trailing dots from path components, while Linux 5.18 introduced the exFAT &amp;ldquo;keep_last_dots&amp;rdquo; mount option, which can be used to control whether trailing dots are removed.</description>
    </item>
    
    <item>
      <title>Spring Framework RCE, Early Announcement</title>
      <link>https://www.javai.net/post/202203/spring-framework-rce-early-announcement/</link>
      <pubDate>Thu, 31 Mar 2022 19:16:46 +0800</pubDate>
      
      <guid>https://www.javai.net/post/202203/spring-framework-rce-early-announcement/</guid>
      <description>Updates:
 [15:40 BST] Spring Boot 2.6.6 is available. [14:38 BST] Spring Boot 2.5.12 is available. [14:00 BST] CVE-2022-22965 is published. [13:03 BST] Added section &amp;ldquo;Misconceptions&amp;rdquo;. [12:34 BST] Added section &amp;ldquo;Am I Impacted&amp;rdquo;. [12:11 BST] Fix minor issue in the workaround for adding disallowedFields . [11:59 BST] Spring Framework versions 5.3.18 and 5.2.20 , which address the vulnerability, are now available. The release process for Spring Boot is in progress.  Overview I would like to announce an RCE vulnerability in the Spring Framework that was leaked out ahead of CVE publication.</description>
    </item>
    
    <item>
      <title>Oracle cracks down on Java licensing issues, enterprises remove JDK overnight</title>
      <link>https://www.javai.net/post/202203/oracle-java-license/</link>
      <pubDate>Wed, 30 Mar 2022 13:04:22 +0800</pubDate>
      
      <guid>https://www.javai.net/post/202203/oracle-java-license/</guid>
      <description>According to a report in the foreign media The Register and feedback from major enterprises, Oracle has recently begun to include Java in its software licensing review, with the aim of Oracle&amp;rsquo;s move is an effort to push companies to pay, an operation it routinely employs to boost payment rates.
Oracle introduced two licensing models for Java SE. In April 2019, Oracle began charging a license fee for Java that was previously free, which requires users to pay for a subscription to a commercial Java SE product in order to receive patches and updates.</description>
    </item>
    
    <item>
      <title>About Spring Core Spring Beans Remote Code Warning Notice for Execution 0day Vulnerability</title>
      <link>https://www.javai.net/post/202203/spring-0day-vulnerability/</link>
      <pubDate>Wed, 30 Mar 2022 10:06:26 +0800</pubDate>
      
      <guid>https://www.javai.net/post/202203/spring-0day-vulnerability/</guid>
      <description>Information indicates that an RCE 0day vulnerability has been reported in the Spring Framework. If the target system is developed using Spring and has a JDK version above JDK9, an unauthorized attacker can exploit this vulnerability to remotely execute arbitrary code on the target device.
1. Vulnerability Situation Analysis The Spring framework is the most widely used lightweight open source framework for Java, and in the JDK9 version of the Spring framework (and above), a remote attacker can obtain an AccessLogValve object through the framework&amp;rsquo;s parameter binding feature and use malicious field values to trigger the pipeline mechanism and write to a file in an arbitrary path if certain conditions are met.</description>
    </item>
    
    <item>
      <title>JDK 18 / Java 18 GA is released</title>
      <link>https://www.javai.net/post/202203/jdk18/</link>
      <pubDate>Mon, 28 Mar 2022 22:44:09 +0800</pubDate>
      
      <guid>https://www.javai.net/post/202203/jdk18/</guid>
      <description>JDK 18 / Java 18 GA is released. JDK 18 is a short-term maintenance release that will receive six months of support. Despite this, it is still available for use in production environments. According to the development plan, JDK 19 will be released this September, and the next LTS version, JDK 21, will be released in September 2023.
JDK 18 includes a total of nine JEPs, as well as hundreds of smaller enhancements and more than a thousand bug fixes.</description>
    </item>
    
  </channel>
</rss>
